{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","clearSelected","setState","removeGood","selectedGood","filter","good","addGood","prevState","formatTitle","selectedCount","length","slice","join","this","className","type","onClick","goodsFromServer","map","isActive","includes","classNames","uuid","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAAe,G,YAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCEWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,cAAgB,kBAAM,EAAKC,SAAS,CAAEF,cAAe,MALvD,EAOEG,WAAa,SAACC,GACZ,EAAKF,UAAS,SAACH,GAAD,MACZ,CACEC,cAAeD,EAAMC,cAClBK,QAAO,SAAAC,GAAI,OAAIA,IAASF,UAXnC,EAgBEG,QAAU,SAACH,GACT,EAAKF,UAAS,SAACM,GAAD,MACZ,CAAER,cAAc,GAAD,mBAAMQ,EAAUR,eAAhB,CAA+BI,SAlBpD,EAsBEK,YAAc,SAACT,GACb,IAAMU,EAAgBV,EAAcW,OAEpC,OAAQD,GACN,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUV,EAAV,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcY,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDb,EAAcU,EAAgB,GAArF,mBA/BR,4CAmCE,WAAU,IAAD,OACCV,EAAkBc,KAAKf,MAAvBC,cAER,OACE,uBAAMe,UAAU,uBAAhB,UACE,yBAAQA,UAAU,4BAAlB,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKL,YAAYT,KAGnBA,EAAcW,OAEX,wBACEK,KAAK,SACLD,UAAU,8BACVE,QAASH,KAAKb,cAHhB,mBAOE,MAGR,6BACGiB,EAAgBC,KAAI,SAAAb,GACnB,IAAMc,EAAWpB,EAAcqB,SAASf,GAExC,OACE,qBAEES,UAAWO,IACT,OACA,CAAE,eAAgBF,IAJtB,UAOGd,EAEAc,EAEG,wBACEJ,KAAK,SACLD,UAAU,gCACVE,QAAS,kBAAM,EAAKd,WAAWG,IAHjC,oBASA,wBACEU,KAAK,SACLD,UAAU,iCACVE,QAAS,kBAAM,EAAKV,QAAQD,IAH9B,sBAnBCiB,2BA/DrB,GAAyBC,aCTzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b3bb6db.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport classNames from 'classnames';\nimport { v4 as uuid } from 'uuid';\nimport './App.scss';\nimport './Goods.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clearSelected = () => this.setState({ selectedGoods: [] });\n\n  removeGood = (selectedGood: string) => {\n    this.setState((state) => (\n      {\n        selectedGoods: state.selectedGoods\n          .filter(good => good !== selectedGood),\n      }\n    ));\n  };\n\n  addGood = (selectedGood: string) => {\n    this.setState((prevState) => (\n      { selectedGoods: [...prevState.selectedGoods, selectedGood] }\n    ));\n  };\n\n  formatTitle = (selectedGoods: string[]) => {\n    const selectedCount = selectedGoods.length;\n\n    switch (selectedCount) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedCount - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App panel is-primary\">\n        <header className=\"App__header panel-heading\">\n          <h1 className=\"App__title\">\n            {this.formatTitle(selectedGoods)}\n          </h1>\n\n          {selectedGoods.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"App__clear button is-danger\"\n                onClick={this.clearSelected}\n              >\n                Clear\n              </button>\n            ) : ''}\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            const isActive = selectedGoods.includes(good);\n\n            return (\n              <li\n                key={uuid()}\n                className={classNames(\n                  'Good',\n                  { 'Good--active': isActive },\n                )}\n              >\n                {good}\n\n                {isActive\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"Good__remove button is-danger\"\n                      onClick={() => this.removeGood(good)}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"Good__select button is-success\"\n                      onClick={() => this.addGood(good)}\n                    >\n                      Select\n                    </button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}