{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","clearSelected","setState","removeGood","good","prevState","filter","el","addGood","this","selectedCount","length","selectedInfo","slice","join","className","type","onClick","goodsFromServer","map","classNames","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCAWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,cAAgB,kBAAM,EAAKC,SAAS,CAAEF,cAAe,MALvD,EAOEG,WAAa,SAACC,GACZ,EAAKF,UAAS,SAACG,GAAD,MACZ,CAAEL,cAAeK,EAAUL,cAAcM,QAAO,SAAAC,GAAE,OAAIA,IAAOH,UATnE,EAaEI,QAAU,SAACJ,GACT,EAAKF,UAAS,SAACG,GAAD,MACZ,CAAEL,cAAc,GAAD,mBAAMK,EAAUL,eAAhB,CAA+BI,SAfpD,4CAmBE,WAAU,IAAD,OACCJ,EAAkBS,KAAKV,MAAvBC,cACFU,EAAgBV,EAAcW,OAChCC,EAAe,oBAUnB,OARsB,IAAlBF,IACFE,EAAY,UAAMZ,EAAN,iBAGVU,EAAgB,IAClBE,EAAY,UAAMZ,EAAca,MAAM,GAAI,GAAGC,KAAK,MAAtC,gBAAmDd,EAAcU,EAAgB,GAAjF,kBAIZ,uBAAMK,UAAU,uBAAhB,UACE,yBAAQA,UAAU,4BAAlB,UACE,oBAAIA,UAAU,aAAd,SACGH,IAGFZ,EAAcW,QACb,wBACEK,KAAK,SACLD,UAAU,8BACVE,QAASR,KAAKR,cAHhB,sBAUJ,6BACGiB,EAAgBC,KAAI,SAAAf,GAAI,OACvB,qBAEEW,UAAWK,IACT,OACA,CAAE,eAAgBpB,EAAcqB,SAASjB,KAJ7C,UAOGA,EAEAJ,EAAcqB,SAASjB,GAEpB,wBACEY,KAAK,SACLD,UAAU,gCACVE,QAAS,kBAAM,EAAKd,WAAWC,IAHjC,oBASA,wBACEY,KAAK,SACLD,UAAU,iCACVE,QAAS,kBAAM,EAAKT,QAAQJ,IAH9B,sBAnBCA,eArDnB,GAAyBkB,aCPzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5619b2a8.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clearSelected = () => this.setState({ selectedGoods: [] });\n\n  removeGood = (good: string) => {\n    this.setState((prevState) => (\n      { selectedGoods: prevState.selectedGoods.filter(el => el !== good) }\n    ));\n  };\n\n  addGood = (good: string) => {\n    this.setState((prevState) => (\n      { selectedGoods: [...prevState.selectedGoods, good] }\n    ));\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const selectedCount = selectedGoods.length;\n    let selectedInfo = 'No goods selected';\n\n    if (selectedCount === 1) {\n      selectedInfo = `${selectedGoods} is selected`;\n    }\n\n    if (selectedCount > 1) {\n      selectedInfo = `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedCount - 1]} are selected`;\n    }\n\n    return (\n      <main className=\"App panel is-primary\">\n        <header className=\"App__header panel-heading\">\n          <h1 className=\"App__title\">\n            {selectedInfo}\n          </h1>\n\n          {selectedGoods.length && (\n            <button\n              type=\"button\"\n              className=\"App__clear button is-danger\"\n              onClick={this.clearSelected}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames(\n                'Good',\n                { 'Good--active': selectedGoods.includes(good) },\n              )}\n            >\n              {good}\n\n              {selectedGoods.includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"Good__remove button is-danger\"\n                    onClick={() => this.removeGood(good)}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"Good__select button is-success\"\n                    onClick={() => this.addGood(good)}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}